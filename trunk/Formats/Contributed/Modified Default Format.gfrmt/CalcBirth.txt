-- The event tags that will be examined and calculated if possibleproperty indieventtags : {"BAPM", "CHR", "CENS", "EMMI", "IMMI", "NATU", "BURI", "DEAT", "CREM", "EMIG", "PROB", "WILL"}property fameventtags : {"CENS", "MARR", "DIVF", "DIV", "ENGA", "MARB", "MARC", "MARL", "MARS"}global runningtotalglobal eventcountglobal mineventdateglobal CurrentRecset runningtotal to 0set eventcount to 0set mineventdate to 9999999tell application "GEDitCOM II"	set message visible to false		if versionNumber < 1.6 then		--display dialog "This script requires GEDitCOM II, Version 1.6 or newer. Please upgrade and try again" buttons {"OK"} default button "OK" with title "Upgrade Required"
		user option title "Upgrade Required" message "This script requires GEDitCOM II, Version 1.6 or newer. Please upgrade and try again" buttons {"OK"}		return	end if			set recs to selected records of front document	if record type of item 1 of recs is not "INDI" then		--display dialog "You must select an individual in order to calculate a date of birth" buttons "OK" default button 1		user option title "Error" message "You must select an individual in order to calculate a date of birth" buttons {"OK"}		return	end ifend tellset CurrentRec to item 1 of recsset EventList to number of items in indieventtagsset evnts to ""repeat with e from 1 to EventList		tell application "GEDitCOM II"		tell CurrentRec			set evnts to find structures tag item e of indieventtags output "references"			set numEvnt to number of items in evnts						if numEvnt > 0 then				my ProcessEvent(CurrentRec, numEvnt, evnts, e, "INDI")			end if					end tell	end tellend repeatset EventList to number of items in fameventtagsset evnts to ""repeat with e from 1 to EventList		tell application "GEDitCOM II"		tell CurrentRec						set fams to spouse families			set numfams to number of items in fams			repeat with f from 1 to numfams				set famRec to item f of fams				tell famRec					set famevnts to find structures tag item e of fameventtags output "references"					set numEvnt to number of items in famevnts										if numEvnt > 0 then						my ProcessEvent(CurrentRec, numEvnt, famevnts, e, "FAM")					end if									end tell			end repeat		end tell	end tellend repeat-- Display resulttell application "GEDitCOM II"	try		set calcbirth to date text sdn (runningtotal / eventcount)		if (runningtotal / eventcount) > mineventdate then			set calcbirth to date text sdn (mineventdate)		end if		set calcdate to "ABT " & ((characters ((length of calcbirth) - 3) thru (length of calcbirth) of calcbirth) as string)		set choice to user option title "Calculated Birth Date" message "c " & ((characters ((length of calcbirth) - 4) thru (length of calcbirth) of calcbirth) as string) & " calculated from " & eventcount & " events" buttons {"Cancel", "Insert"}		if choice is "Insert" then			my InsertData(CurrentRec, calcdate, eventcount)		end if	on error		--display dialog "Unable to calculate date" buttons "OK" default button 1
		user option title "Error" message "Unable to calulate date" buttons {"OK"}	end tryend tellon ProcessEvent(CurrentRec, numEvnt, evnts, e, etype)		-- one is found, so process it	tell application "GEDitCOM II"		repeat with i from 1 to numEvnt						set evnt to item i of evnts			if level of evnt is 1 then								tell evnt					set edate to event date					if edate is not "" then						if item 1 of (sdn range full date edate) < mineventdate then							set mineventdate to item 1 of (sdn range full date edate)						end if					end if					if etype is "INDI" then						set eage to evaluate expression "AGE"					else						if sex of CurrentRec is "M" then							set eage to evaluate expression "HUSB.AGE"						else							set eage to evaluate expression "WIFE.AGE"						end if					end if					if edate is not "" and eage is not "" then						try							set daterange to sdn range full date edate							set midrange to ((item 1 of daterange) + (item 2 of daterange)) / 2							set runningtotal to runningtotal + (midrange - (eage * 365.25))							set eventcount to eventcount + 1						end try					end if				end tell			end if		end repeat	end tellend ProcessEventon InsertData(CurrentRec, calcdate, eventcount)	tell application "GEDitCOM II"		tell CurrentRec			set birth to find structures tag "BIRT" output "references"			if number of items in birth > 1 then				user option title "Birth Events" message "There is more than one birth event for this individual, please enter manually." buttons {"OK"}			else				if birth is {} then					set birth to make new structure with properties {name:"BIRT"}				end if								tell item 1 of birth					try						set bdate to structure named "DATE"						set contents of bdate to calcdate					on error						set bdate to make new structure with properties {name:"DATE", contents:calcdate}					end try										tell bdate						set memo to "Date calculated on " & (date today) & " from " & eventcount & " events"					end tell				end tell			end if		end tell	end tellend InsertData